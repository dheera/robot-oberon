#!/usr/bin/env python3

import json
import psutil
import rospy
import time

from std_msgs.msg import String

def mean(list):
    return sum(list)/len(list)

if __name__ == "__main__":
    rospy.init_node("status_system_node")

    pub_psutil = rospy.Publisher("system", String, queue_size = 1)

    rate = rospy.Rate(0.2)
    while not rospy.is_shutdown():
        rate.sleep()

        status = {}
        sensors_temperatures = psutil.sensors_temperatures()
        if 'coretemp' in sensors_temperatures:
            status['cpu_temp'] = mean(list(map(lambda x:x.current, sensors_temperatures['coretemp'])))
        status['cpu_percent'] = mean(psutil.cpu_percent(percpu=True))
        status['disk_percent'] = psutil.disk_usage('/').percent
        status['net_bytes_sent'] = psutil.net_io_counters().bytes_sent
        status['net_bytes_recv'] = psutil.net_io_counters().bytes_recv
        status['mem_virtual_percent'] = psutil.virtual_memory().percent
        status['mem_swap_percent'] = psutil.swap_memory().percent

        pub_psutil.publish(status)
